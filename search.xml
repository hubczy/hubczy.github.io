<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo在别的电脑继续写</title>
    <url>/2023/08/26/hexo%E5%9C%A8%E5%88%AB%E7%9A%84%E7%94%B5%E8%84%91%E7%BB%A7%E7%BB%AD%E5%86%99/</url>
    <content><![CDATA[<p>操作步骤</p>
<ol>
<li>安装必要软件</li>
</ol>
<p>安装 Git 客户端<br>安装 node JS</p>
<ol start="2">
<li>拷贝源文件<br>将初始电脑上个人博客文件夹下这几个文件夹拷到当前新电脑的准备设置的博客路径下。</li>
</ol>
<p>_config.yml<br> package.json<br> scaffolds/<br> source/<br> themes/</p>
<ol start="3">
<li>安装hexo<br>在 cmd 下输入下面指令安装 hexo：</li>
</ol>
<p>npm install hexo-cli -g //如果出错，<br>npm install -g hexo 或者sudo npm install -g hexo</p>
<ol start="4">
<li>在新博客路径下，安装三方依赖库</li>
</ol>
<p>npm install<br>npm install hexo-deployer-git –save  // 文章部署到 git 的模块<br>npm install 你的主题所需要的依赖库</p>
<ol start="5">
<li><p>测试<br>这时候使用 hexo s 基本可以看到你新添加的文章了。</p>
</li>
<li><p>GITHUB 添加 SSH KEYS<br>在GitHub的ssh keys那里再添加一个当前电脑的环境生成的key，但是可别把原来的电脑删掉了啊。</p>
</li>
</ol>
<p>首先在本地创建 SSH Keys:</p>
<p>$ ssh-<strong>**</strong> -t rsa -C “<a href="mailto:&#120;&#120;&#120;&#120;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;">&#120;&#120;&#120;&#120;&#64;&#x71;&#113;&#x2e;&#x63;&#x6f;&#x6d;</a>“</p>
<p>后面的邮箱即为 github 注册邮箱，也是你登录 Github 的邮箱，之后会要求确认路径和输入密码，一路回车就行。</p>
<p>成功的话会在 ~/下生成 .ssh文件夹，进去，打开 id_rsa.pub，复制里面的key即可。然后拷贝到 Github 的 SSH Keys(这里要添加一个新的)</p>
<p>然后在终端中，我们再次测试下公钥有没有添加成功：ssh -T <a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#x69;&#116;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#x69;&#116;&#64;&#103;&#x69;&#116;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;</a></p>
<p>会弹出确认命令，输入yes,会弹出你的名字等等，这就代表成功了</p>
<p>然后就可以发布你的博客文章了</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>vba学习</title>
    <url>/2023/08/13/vba%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>Private Sub CommandButton1_Click()<br>    ‘Dim pth$<br>    ‘With Application.FileDialog(msoFileDialogFolderPicker)<br>    ‘    .Title = “选择文件夹”<br>    ‘    If .Show Then<br>    ‘        pth = .SelectedItems(1)<br>    ‘    End If<br>    ‘End With<br>    ‘If IsEmpty(pth) Then Exit Sub     ‘如果按取消键，退出</p>
<pre><code>&#39;Call get_folder_file(pth)
Dim arr()
Dim ws As Worksheet
Dim lastRow As Long
Dim cell As Range
Dim offsetAfterStart As Range
Dim offsetAfterEnd As Range

Set ws = ThisWorkbook.Sheets(&quot;Sheet3&quot;)
Set rg = ws.UsedRange.Find(What:=&quot;aaaa&quot;, LookIn:=xlValues, LookAt:=xlWhole)
If Not rg Is Nothing Then
    &#39;MsgBox rg.Address
    &#39;MsgBox rg.Column
    &#39;MsgBox rg.Row
    &#39;ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Select
    &#39;MsgBox ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Cells(rg.Column, rg.Column).SpecialCells(xlCellTypeLastCell).Row
    &#39;MsgBox Application.CountIf(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Columns(rg.Column), &quot;&lt;&gt;&quot;)
    &#39;MsgBox Application.CountA(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Columns(rg.Column))
    Set offsetAfterStart = Range(rg.Address).Offset(rg.Row, 0)
    MsgBox offsetAfterStart.Address
    Set offsetAfterEnd = Range(rg.Address).Offset(Application.CountA(ws.Columns(rg.Column)) - 1, 0)
    
    &#39;MsgBox ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Range(rg.Address).Offset(Application.CountA(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Columns(rg.Column)) - 1, 0).Value
    &#39;arr = ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Range(rg.Address).Offset(Application.CountA(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Columns(rg.Column)) - 1, 0).Value
    &#39;arr = ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Range(rg.Address, Range(rg.Address).Offset(Application.CountA(Columns(rg.Column)) - 1, 0)).Value
    &#39;MsgBox arr
    &#39;arr = Application.WorksheetFunction.Offset(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).UsedRange.Find(What:=&quot;aaaa&quot;, LookIn:=xlValues, LookAt:=xlWhole), 1, 0, Application.CountA(ThisWorkbook.Worksheets(&quot;Sheet3&quot;).Columns(rg.Column)) - 1, 1)
    Dim i As Integer
    MsgBox offsetAfterEnd.Address
     MsgBox offsetAfterEnd.Row
    ReDim arr(0 To offsetAfterEnd.Row)
    i = 0
    For Each cell In ws.Range(offsetAfterStart.Address, offsetAfterEnd.Address)
        If Not IsEmpty(cell.Value) Then  &#39;检查第1列(索引1)是否非空
            MsgBox cell.Value  &#39;如果非空,打印值
            
            arr(i) = cell.Value
            i = i + 1
        End If
    Next cell
    For j = LBound(arr, 1) To UBound(arr, 1) Step 1
    MsgBox j
        MsgBox arr(j)
    Next
End If
</code></pre>
<p>End Sub</p>
<hr>
<pre><code>    Set rg = ws.UsedRange.Find(What:=&quot;P&quot;, LookIn:=xlValues, LookAt:=xlWhole)
    ws.Rows(rg.Row).Copy
    ThisWorkbook.Sheets(&quot;Sheet4&quot;).Rows(1).Insert Shift:=xlDown
     &#39;ThisWorkbook.Sheets(&quot;Sheet4&quot;).Rows(2).PasteSpecial xlPasteAll
     ThisWorkbook.Sheets(&quot;Sheet4&quot;).UsedRange.Find(What:=&quot;P&quot;, LookIn:=xlValues, LookAt:=xlWhole).Clear
     &#39;ThisWorkbook.Sheets(&quot;Sheet4&quot;).Range(rg.Address).Clear
     
     
    Application.CutCopyMode = False
</code></pre>
<hr>
<p>VBA读取txt文件内容</p>
<p>一、打开txt文件<br>在VBA中，我们需要使用FileSystemObject对象来操作文件，首先需要创建一个对象并打开指定的txt文件。</p>
<p>Sub OpenFile()<br>    Dim fso As Object, txtFile As Object<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 1)<br>End Sub<br>代码中，调用CreateObject函数创建了一个FileSystemObject对象，然后使用OpenTextFile方法打开指定的txt文件，1表示以只读方式打开。</p>
<p>二、读取txt文件内容<br>使用FileSystemObject对象的ReadAll、ReadLine、Read和WriteLine等方法可以读取文件中的内容。ReadAll方法可以将文件内容读入到字符串变量中，ReadLine方法可以逐行读取文件中的内容，Read方法可以按字符读取文件内容，WriteLine方法可以将指定的字符串写入文件中，并在末尾添加一个换行符。</p>
<p>Sub ReadTextFile()<br>    Dim fso As Object, txtFile As Object, str As String<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 1)<br>    str = txtFile.ReadAll<br>    Debug.Print str<br>End Sub<br>代码中，使用ReadAll方法读取文件内容，然后将其赋值给变量str，最后通过Debug.Print打印到调试窗口中。</p>
<p>三、逐行读取txt文件内容<br>如果需要逐行读取txt文件中的内容，可以使用FileSystemObject对象的ReadLine方法，可以通过循环逐行读取文件内容。</p>
<p>Sub ReadLine()<br>    Dim fso As Object, txtFile As Object, str As String<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 1)<br>    Do Until txtFile.AtEndOfStream<br>        str = txtFile.ReadLine<br>        Debug.Print str<br>    Loop<br>End Sub<br>代码中，使用Do Until循环，循环条件为txtFile.AtEndOfStream，表示文件未到结尾时一直循环，然后使用ReadLine方法逐行读取文件内容，并通过Debug.Print打印到调试窗口中。</p>
<p>四、按字符读取txt文件内容<br>有时候需要按字符读取txt文件内容，可以使用FileSystemObject对象的Read方法，并通过循环一个个读取字符。</p>
<p>Sub ReadChar()<br>    Dim fso As Object, txtFile As Object, str As String, c As String<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 1)<br>    Do Until txtFile.AtEndOfStream<br>        c = txtFile.Read(1)<br>        str = str &amp; c<br>    Loop<br>    Debug.Print str<br>End Sub<br>代码中，使用Read方法，每次读取一个字符并赋值给变量c，然后通过字符串拼接的方式将所有字符组成一个完整的字符串，并通过Debug.Print打印到调试窗口中。</p>
<p>五、写入txt文件内容<br>使用FileSystemObject对象的Write、WriteLine等方法可以向txt文件中写入内容。</p>
<p>Sub WriteTextFile()<br>    Dim fso As Object, txtFile As Object<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 2)<br>    txtFile.WriteLine “hello world”<br>    txtFile.Close<br>End Sub<br>代码中，使用OpenTextFile方法打开txt文件并以写入方式打开，2表示以写入方式打开。然后使用WriteLine方法将指定字符串写入文件中，最后使用Close方法关闭文件。</p>
<p>六、关闭txt文件<br>在VBA中打开的txt文件必须要关闭，可以使用FileSystemObject对象的Close方法来关闭文件，防止出现错误。</p>
<p>Sub CloseFile()<br>    Dim fso As Object, txtFile As Object<br>    Set fso = CreateObject(“Scripting.FileSystemObject”)<br>    Set txtFile = fso.OpenTextFile(“C:\test.txt”, 1)<br>    txtFile.Close<br>End Sub<br>代码中，使用Close方法关闭已打开的txt文件。</p>
<p>七、总结<br>VBA读取txt文件内容主要是通过FileSystemObject对象来操作文件，包括打开文件、读取文件、写入文件和关闭文件，有了这些方法可以方便地处理txt文件中的内容。</p>
]]></content>
      <tags>
        <tag>VBA</tag>
      </tags>
  </entry>
</search>
